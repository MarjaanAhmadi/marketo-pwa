{"ast":null,"code":"import axios from 'axios'; //define an instance from Axios and set headers and baseurl => because we are using proxy we can't set base url\n\nvar axiosInstance = axios.create({\n  // timeout: 10000,\n  // baseURL: process.env.REACT_APP_BASE_API,\n  baseURL: 'http://172.20.2.25:8485/',\n  headers: {\n    'Access-Control-Allow-Origin': '*',\n    'Content-Type': 'application/json'\n  }\n});\naxiosInstance.interceptors.response.use(null, function (error) {\n  // if (error.response.status === 500) {\n  // }\n  // if (error.response.status === 400) {\n  // }\n  // if (error.response.status === 401) {\n  // }\n  // if (error.response.status === 409) {\n  // }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"sources":["/home/marjaan/sandBox/projects/marketo-pwa/src/config/axiosTest.js"],"names":["axios","axiosInstance","create","baseURL","headers","interceptors","response","use","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,IAAIC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC7B;AACA;AACAC,EAAAA,OAAO,EAAE,0BAHoB;AAI7BC,EAAAA,OAAO,EAAE;AACL,mCAA+B,GAD1B;AAED,oBAAgB;AAFf;AAJoB,CAAb,CAApB;AAUAH,aAAa,CAACI,YAAd,CAA2BC,QAA3B,CAAoCC,GAApC,CAAwC,IAAxC,EAA8C,UAACC,KAAD,EAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAXD;AAaA,eAAeP,aAAf","sourcesContent":["import axios from 'axios';\n//define an instance from Axios and set headers and baseurl => because we are using proxy we can't set base url\n\nlet axiosInstance = axios.create({\n    // timeout: 10000,\n    // baseURL: process.env.REACT_APP_BASE_API,\n    baseURL: 'http://172.20.2.25:8485/',\n    headers: {\n        'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json'\n        \n    }\n})\naxiosInstance.interceptors.response.use(null, (error) => {\n    // if (error.response.status === 500) {\n    // }\n    // if (error.response.status === 400) {\n    // }\n    // if (error.response.status === 401) {\n    // }\n    // if (error.response.status === 409) {\n    // }\n\n    return Promise.reject(error)\n})\n\nexport default axiosInstance;"]},"metadata":{},"sourceType":"module"}