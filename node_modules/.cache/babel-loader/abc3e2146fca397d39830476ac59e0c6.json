{"ast":null,"code":"import _regeneratorRuntime from \"/home/marjaan/sandBox/projects/marketo-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/marjaan/sandBox/projects/marketo-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axiosInstance from '../config/axios'; //methods for these obj is get, get by id, filter by params\n\nvar oredrReq =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(method, pid, iid, data) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = method;\n            _context.next = _context.t0 === 'GET' ? 3 : 15;\n            break;\n\n          case 3:\n            _context.prev = 3;\n\n            if (!(pid !== null && iid !== null)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return axiosInstance.get(\"/product/\".concat(pid, \"/item/\").concat(iid));\n\n          case 7:\n            response = _context.sent;\n\n            if (!response.data) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response);\n\n          case 10:\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t1 = _context[\"catch\"](3);\n            console.log(_context.t1);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 12]]);\n  }));\n\n  return function oredrReq(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default oredrReq;","map":{"version":3,"sources":["/home/marjaan/sandBox/projects/marketo-pwa/src/requests/productItems.js"],"names":["axiosInstance","oredrReq","method","pid","iid","data","get","response","console","log"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,iBAA1B,C,CACA;;AACA,IAAMC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,MAAP,EAAcC,GAAd,EAAkBC,GAAlB,EAAuBC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEFH,MAFE;AAAA,4CAGA,KAHA;AAAA;;AAAA;AAAA;;AAAA,kBAKMC,GAAG,KAAK,IAAR,IAAgBC,GAAG,KAAK,IAL9B;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAM8BJ,aAAa,CAACM,GAAd,oBAA8BH,GAA9B,mBAA0CC,GAA1C,EAN9B;;AAAA;AAMaG,YAAAA,QANb;;AAAA,iBAOUA,QAAQ,CAACF,IAPnB;AAAA;AAAA;AAAA;;AAAA,6CAQcE,QARd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYGC,YAAAA,OAAO,CAACC,GAAR;;AAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARR,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAgBA,eAAeA,QAAf","sourcesContent":["import axiosInstance from '../config/axios';\n//methods for these obj is get, get by id, filter by params\nconst oredrReq = async (method,pid,iid, data) => {\n   \n        switch(method) {\n            case 'GET':\n                try {\n                    if(pid !== null && iid !== null){\n                        const response = await axiosInstance.get(`/product/${pid}/item/${iid}`);\n                        if(response.data)\n                        return response;\n                    }\n                    \n                } catch (error) {\n                    console.log(error)\n                }\n        }\n};\nexport default oredrReq;"]},"metadata":{},"sourceType":"module"}