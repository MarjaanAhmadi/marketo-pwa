{"ast":null,"code":"var _jsxFileName = \"/home/marjaan/sandBox/projects/marketo-pwa/src/index.js\";\nimport '@babel/polyfill';\nimport 'intersection-observer';\nimport React, { useEffect } from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider, useDispatch } from 'react-redux';\nimport { ThemeProvider } from 'react-jss';\nimport { useSelector } from 'react-redux';\nimport App from './components/App';\nimport store from './config/redux/store';\nimport * as serviceWorker from './serviceWorker';\nvar theme = {\n  brandPrimary: '#1abedb',\n  textMuted: '#707070',\n  baseColor: '#171717'\n};\nvar initialState = {};\nvar rootElement = document.getElementById('root');\n\nvar ReactApp = function ReactApp() {\n  var loading = false; // const loading = useSelector(state => state.loading);\n\n  return React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    dir: \"rtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))))));\n};\n\nif (rootElement == null) {\n  throw new Error('no rootElement');\n} else {\n  ReactDOM.render(React.createElement(ReactApp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), rootElement);\n}\n\nif (module.hot) {\n  module.hot.accept('./components/App', function () {\n    ReactDOM.render(React.createElement(ReactApp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), rootElement);\n  });\n} // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n\nserviceWorker.register();","map":{"version":3,"sources":["/home/marjaan/sandBox/projects/marketo-pwa/src/index.js"],"names":["React","useEffect","ReactDOM","BrowserRouter","Provider","useDispatch","ThemeProvider","useSelector","App","store","serviceWorker","theme","brandPrimary","textMuted","baseColor","initialState","rootElement","document","getElementById","ReactApp","loading","Error","render","module","hot","accept","register"],"mappings":";AACA,OAAO,iBAAP;AACA,OAAO,uBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,YAAY,EAAE,SADF;AAEZC,EAAAA,SAAS,EAAE,SAFC;AAGZC,EAAAA,SAAS,EAAE;AAHC,CAAd;AAMA,IAAMC,YAAY,GAAG,EAArB;AAEA,IAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAErB,MAAMC,OAAO,GAAG,KAAhB,CAFqB,CAGrB;;AAEA,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAET,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CADA,CADA,CADF,CADA,CADF;AAaD,CAlBD;;AAqBA,IAAIO,WAAW,IAAI,IAAnB,EAAyB;AACvB,QAAM,IAAIK,KAAJ,CAAU,gBAAV,CAAN;AACD,CAFD,MAEO;AACLnB,EAAAA,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAA8BN,WAA9B;AACD;;AAED,IAAIO,MAAM,CAACC,GAAX,EAAgB;AACdD,EAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,kBAAlB,EAAsC,YAAM;AAC1CvB,IAAAA,QAAQ,CAACoB,MAAT,CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEEN,WAFF;AAID,GALD;AAMD,C,CAED;AACA;AACA;;;AACAN,aAAa,CAACgB,QAAd","sourcesContent":["// @flow\nimport '@babel/polyfill';\nimport 'intersection-observer';\nimport React, { useEffect } from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider, useDispatch } from 'react-redux';\nimport { ThemeProvider } from 'react-jss';\nimport {useSelector} from 'react-redux';\n\nimport App from './components/App';\nimport store from './config/redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = {\n  brandPrimary: '#1abedb',\n  textMuted: '#707070',\n  baseColor: '#171717',\n};\n\nconst initialState = {};\n\nconst rootElement = document.getElementById('root');\nconst ReactApp = () => {\n  \n  const loading = false;\n  // const loading = useSelector(state => state.loading);\n  \n  return(\n    <ThemeProvider theme={theme}>\n    <div dir='rtl'>\n      <React.Fragment>\n      <Provider store={store}>\n      <BrowserRouter>\n            <App />\n      </BrowserRouter>\n      </Provider>\n      </React.Fragment>\n    </div>\n  </ThemeProvider>\n  )\n}\n\n\nif (rootElement == null) {\n  throw new Error('no rootElement');\n} else {\n  ReactDOM.render(<ReactApp />, rootElement);\n}\n\nif (module.hot) {\n  module.hot.accept('./components/App', () => {\n    ReactDOM.render(\n      <ReactApp />,\n      rootElement,\n    );\n  });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"]},"metadata":{},"sourceType":"module"}