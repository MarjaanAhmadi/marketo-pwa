{"ast":null,"code":"import _regeneratorRuntime from \"/home/marjaan/sandBox/projects/marketo-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/marjaan/sandBox/projects/marketo-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/marjaan/sandBox/projects/marketo-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/marjaan/sandBox/projects/marketo-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/marjaan/sandBox/projects/marketo-pwa/src/components/NearByInventoryList/index.jsx\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport axiosInstance from '../../config/axios';\nimport SingleNearByInventory from './SingleNearByInventory';\nimport { useDispatch } from 'react-redux';\n\nvar NearByInventoryList = function NearByInventoryList() {\n  var dispatch = useDispatch();\n\n  var _useState = useState({\n    list: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      inventories = _useState2[0],\n      setInventories = _useState2[1];\n\n  var _useState3 = useState({\n    lat: 35.7076319290324,\n    lon: 51.377906799316406\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      location = _useState4[0],\n      setLocation = _useState4[1];\n\n  var getInventories =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                loading: true,\n                type: 'SET_SHOW_LOADING'\n              });\n              _context.next = 4;\n              return axiosInstance.get(\"/inventories/?nearBy=\".concat(location.lat, \",\").concat(location.lon));\n\n            case 4:\n              response = _context.sent;\n              setInventories(_objectSpread({}, inventories, {\n                list: response.data\n              }));\n              dispatch({\n                loading: false,\n                type: 'SET_SHOW_LOADING'\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                loading: false,\n                type: 'SET_SHOW_LOADING'\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function getInventories() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getInventories();\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, inventories.list.map(function (value, idx) {\n    return React.createElement(SingleNearByInventory, {\n      value: value,\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default NearByInventoryList;","map":{"version":3,"sources":["/home/marjaan/sandBox/projects/marketo-pwa/src/components/NearByInventoryList/index.jsx"],"names":["React","useState","useEffect","axiosInstance","SingleNearByInventory","useDispatch","NearByInventoryList","dispatch","list","inventories","setInventories","lat","lon","location","setLocation","getInventories","loading","type","get","response","data","map","value","idx"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;;AAD8B,kBAEOJ,QAAQ,CAAC;AAC1CO,IAAAA,IAAI,EAAE;AADoC,GAAD,CAFf;AAAA;AAAA,MAEvBC,WAFuB;AAAA,MAEXC,cAFW;;AAAA,mBAKET,QAAQ,CAAC;AACrCU,IAAAA,GAAG,EAAE,gBADgC;AAErCC,IAAAA,GAAG,EAAE;AAFgC,GAAD,CALV;AAAA;AAAA,MAKvBC,QALuB;AAAA,MAKbC,WALa;;AAS9B,MAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdR,cAAAA,QAAQ,CAAC;AAACS,gBAAAA,OAAO,EAAE,IAAV;AAAgBC,gBAAAA,IAAI,EAAE;AAAtB,eAAD,CAAR;AAFc;AAAA,qBAGSd,aAAa,CAACe,GAAd,gCAA0CL,QAAQ,CAACF,GAAnD,cAA0DE,QAAQ,CAACD,GAAnE,EAHT;;AAAA;AAGRO,cAAAA,QAHQ;AAIdT,cAAAA,cAAc,mBACPD,WADO;AAEVD,gBAAAA,IAAI,EAAEW,QAAQ,CAACC;AAFL,iBAAd;AAIAb,cAAAA,QAAQ,CAAC;AAACS,gBAAAA,OAAO,EAAE,KAAV;AAAiBC,gBAAAA,IAAI,EAAE;AAAvB,eAAD,CAAR;AARc;AAAA;;AAAA;AAAA;AAAA;AAWdV,cAAAA,QAAQ,CAAC;AAACS,gBAAAA,OAAO,EAAE,KAAV;AAAiBC,gBAAAA,IAAI,EAAE;AAAvB,eAAD,CAAR;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA,oBAAdF,cAAc;AAAA;AAAA;AAAA,KAApB;;AAeAb,EAAAA,SAAS,CAAC,YAAM;AACZa,IAAAA,cAAc;AACjB,GAFQ,EAEP,EAFO,CAAT;AAGA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQN,WAAW,CAACD,IAAZ,CAAiBa,GAAjB,CAAqB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACjC,WACI,oBAAC,qBAAD;AAAuB,MAAA,KAAK,EAAED,KAA9B;AAAqC,MAAA,GAAG,EAAEC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJD,CAFR,CADJ;AAWH,CAtCD;;AAuCA,eAAejB,mBAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport axiosInstance from '../../config/axios';\nimport SingleNearByInventory from './SingleNearByInventory';\nimport { useDispatch } from 'react-redux';\n\nconst NearByInventoryList = () => {\n    const dispatch = useDispatch();\n    const [inventories,setInventories] = useState({\n        list: []\n    });\n    const [location, setLocation] = useState({\n        lat: 35.7076319290324,\n        lon: 51.377906799316406\n    })\n    const getInventories =async ()=>{\n        try {\n            dispatch({loading: true, type: 'SET_SHOW_LOADING'});\n            const response = await axiosInstance.get(`/inventories/?nearBy=${location.lat},${location.lon}`);\n            setInventories({\n                ...inventories,\n                list: response.data\n            });\n            dispatch({loading: false, type: 'SET_SHOW_LOADING'});\n\n        } catch (error) {\n            dispatch({loading: false, type: 'SET_SHOW_LOADING'});\n            \n        }\n    }\n    useEffect(() => {\n        getInventories()\n    },[])\n    return(\n        <React.Fragment>\n            {\n                inventories.list.map((value, idx) => {\n                    return(\n                        <SingleNearByInventory value={value} key={idx} />\n                    )\n                })\n            }\n        </React.Fragment>\n    )\n}\nexport default NearByInventoryList;"]},"metadata":{},"sourceType":"module"}